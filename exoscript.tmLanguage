<?xml  version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"   "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0" >
<!-- Generated via Iro -->
<dict>
  <key>fileTypes</key>  
  <array> 
    <string>txt</string>
    <string>exo</string>
    <string>exotxt</string>
    <string>exo.txt</string>
  </array>
  <key>name</key>
  <string>Exoscript</string>
  <key>patterns</key>
  <array> 
    <dict>
      <key>include</key>
      <string>#main</string>
    </dict>
   </array>
  <key>scopeName</key>
  <string>source.sample</string>
  <key>uuid</key>
  <string></string>
  <key>repository</key>
  <dict>
    <key>main</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>include</key>
          <string>#storyIdProcessing</string>
        </dict>
        <dict>
          <key>match</key>
          <string>((\s*?)-(\s*?)$)</string>
          <key>name</key>
          <string>keyword punctuation.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(====(=+))|(/\*(.*?)$|//(.*?)$)$</string>
          <key>name</key>
          <string>comment.line.sample</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#jumpProcessing</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#tildeProcessing</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#bracketProcessing</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#atSignProcessing</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#realTextHighlighting</string>
        </dict>
       </array>
    </dict>
    <key>atSignProcessing</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>begin</key>
          <string>(@)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>patterns</key>
          <array> 
            <dict>
              <key>include</key>
              <string>#atSignProcessing__1</string>
            </dict>
           </array>
          <key>end</key>
          <string>(^(?=.{0,1})(?:|))</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>comment.line.sample</string>
            </dict>
          </dict>
        </dict>
       </array>
    </dict>
    <key>atSignProcessing__1</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>(insert|replace)</string>
          <key>name</key>
          <string>keyword.control.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\|)</string>
          <key>name</key>
          <string>keyword punctuation.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\&gt;)</string>
          <key>name</key>
          <string>variable.language.sample</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#main</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#vars</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#opsAndLiterals</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#randoVariable</string>
        </dict>
       </array>
    </dict>
    <key>bracketProcessing</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>begin</key>
          <string>(\[if(\s*?)random(\s*?):)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>patterns</key>
          <array> 
            <dict>
              <key>include</key>
              <string>#bracketProcessing__1</string>
            </dict>
           </array>
          <key>end</key>
          <string>(\])</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>begin</key>
          <string>(\[)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>patterns</key>
          <array> 
            <dict>
              <key>include</key>
              <string>#bracketProcessing__2</string>
            </dict>
           </array>
          <key>end</key>
          <string>(\])</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
        </dict>
       </array>
    </dict>
    <key>bracketProcessing__1</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>(\|)</string>
          <key>name</key>
          <string>keyword punctuation.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(^[\|])</string>
          <key>name</key>
          <string>text source.sample</string>
        </dict>
       </array>
    </dict>
    <key>bracketProcessing__2</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>include</key>
          <string>#main</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#vars</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#opsAndLiterals</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#randoVariable</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(and|call|else|end|elseif|if|ifd|or|random|set|setif)</string>
          <key>name</key>
          <string>keyword.control.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>([^\x{0028}A-Za-z\x{00c0}-\x{00ff}\x{0029}]\\d+|true|false|none|null|((\\+|-)\\d+))</string>
          <key>name</key>
          <string>constant.sample</string>
        </dict>
       </array>
    </dict>
    <key>interpolatingVariables</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>begin</key>
          <string>((\[\=|\[)((?![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}])))</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>patterns</key>
          <array> 
            <dict>
              <key>include</key>
              <string>#uid_interpolating_vars_in_text_open</string>
            </dict>
           </array>
          <key>end</key>
          <string>(\])</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
        </dict>
       </array>
    </dict>
    <key>jumpProcessing</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>begin</key>
          <string>(^(\s*?)(&gt;+))</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword.operator.sample</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>text source.sample</string>
          <key>end</key>
          <string>(.*?$)</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.parameter.sample</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>begin</key>
          <string>(^\s*=(?!=))</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>text source.sample</string>
          <key>end</key>
          <string>(.*?$)</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.parameter.sample</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>begin</key>
          <string>(\s\*+\s)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>text source.sample</string>
          <key>end</key>
          <string>(.*?$)</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.parameter.sample</string>
            </dict>
          </dict>
        </dict>
        <dict>
          <key>begin</key>
          <string>(\s\*+=\s)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>text source.sample</string>
          <key>end</key>
          <string>(.*?$)</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>variable.parameter.sample</string>
            </dict>
          </dict>
        </dict>
       </array>
    </dict>
    <key>jumpProcessing__1</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>opsAndLiterals</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>((?&lt;![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}])(true|false|none|null)(?![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}]))</string>
          <key>name</key>
          <string>constant.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(&amp;&amp;|\+\+|\+|--|-|&gt;!|!=|=|&lt;|&gt;|&lt;=|&gt;=|%|&amp;|\?|:|\|\|)</string>
          <key>name</key>
          <string>keyword.operator.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\!)</string>
          <key>name</key>
          <string>keyword.operator.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(?&lt;![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}])([0-9]+)(?![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}])</string>
          <key>name</key>
          <string>constant.sample</string>
        </dict>
       </array>
    </dict>
    <key>randoVariable</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>((?&lt;![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}])([A-Za-z\x{00c0}-\x{00ff}_\x{0024}]([A-Za-z\x{00c0}-\x{00ff}_\x{0024}0-9])+)(?![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}]))</string>
          <key>name</key>
          <string>variable.language.sample</string>
        </dict>
       </array>
    </dict>
    <key>realTextHighlighting</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>include</key>
          <string>#interpolatingVariables</string>
        </dict>
       </array>
    </dict>
    <key>storyIdProcessing</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>begin</key>
          <string>(^===\s)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>contentName</key>
          <string>text source.sample</string>
          <key>end</key>
          <string>((?&lt;![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}])([a-zA-Z_\x{0024}]([A-Za-z\x{00c0}-\x{00ff}_\x{0024}0-9])+)(?![A-Za-z\x{00c0}-\x{00d6}\x{00d8}-\x{00f6}\x{00f8}-\x{00ff}]))</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>entity.name.class.sample</string>
            </dict>
          </dict>
        </dict>
       </array>
    </dict>
    <key>storyIdProcessing__1</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>tildeProcessing</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>begin</key>
          <string>(~)</string>
          <key>beginCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>keyword punctuation.sample</string>
            </dict>
          </dict>
          <key>patterns</key>
          <array> 
            <dict>
              <key>include</key>
              <string>#tildeProcessing__1</string>
            </dict>
           </array>
          <key>end</key>
          <string>(^(?=.{0,1})(?:|))</string>
          <key>endCaptures</key>
          <dict>
            <key>1</key>
            <dict>
              <key>name</key>
              <string>comment.line.sample</string>
            </dict>
          </dict>
        </dict>
       </array>
    </dict>
    <key>tildeProcessing__1</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>(ifd|if|setif|set|call)</string>
          <key>name</key>
          <string>keyword.control.sample</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#main</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#vars</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#opsAndLiterals</string>
        </dict>
        <dict>
          <key>include</key>
          <string>#randoVariable</string>
        </dict>
       </array>
    </dict>
    <key>uid_choiceid_identifier</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>uid_interpolating_vars_in_text_open</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>([a-zA-Z_\x{0024}]([a-zA-Z_\x{0024}0-9])+)</string>
          <key>name</key>
          <string>variable.language.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(\|)</string>
          <key>name</key>
          <string>keyword punctuation.sample</string>
        </dict>
       </array>
    </dict>
    <key>uid_subchoice_flow</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>uid_subchoice_flow_break</key>
    <dict>
      <key>patterns</key>
      <array> 
       </array>
    </dict>
    <key>vars</key>
    <dict>
      <key>patterns</key>
      <array> 
        <dict>
          <key>match</key>
          <string>(var_(.*?)(?=\]|\s))</string>
          <key>name</key>
          <string>variable.parameter.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(mem_(.*?)(?=\]|\s))</string>
          <key>name</key>
          <string>variable.parameter.sample</string>
        </dict>
        <dict>
          <key>match</key>
          <string>(hog_(.*?)(?=\]|\s))</string>
          <key>name</key>
          <string>variable.parameter.sample</string>
        </dict>
       </array>
    </dict>
  </dict>
</dict>
</plist>
