%YAML 1.2
---
name: sample
scope: source.sample
file_extensions: [ sample ]

contexts:
  main:
    - match: '(^===\s)'
      captures:
        0: text.sample
    - match: '(\s\*+\s)'
      captures:
        0: text.sample
    - match: '(====(=+))|(/\*(.*?)$|//(.*?)$|#(.*?))$'
      captures:
        0: text.sample
    - include: tildeProcessing
    - include: bracketProcessing
    - include: realTextHighlighting
    - match: '(.)'
      captures:
        0: text.sample
  realTextHighlighting:
    - match: '(\")([^\"]|\"\")*(\")'
      captures:
        0: text.sample
    - match: '(^((\")([^\"]|\"\")*(\")))'
      captures:
        0: text.sample
    - match: '(.)'
      captures:
        0: text.sample
  randoVariable:
    - match: '(\b([a-zA-Z_\x{0024}]([a-zA-Z_\x{0024}0-9])+)\b)'
      captures:
        0: text.sample
    - match: '(.)'
      captures:
        0: text.sample
  opsAndLiterals:
    - match: '(\b(true|false|none|null)\b)'
      captures:
        0: text.sample
    - match: '(&&|\+\+|\+|--|-|>!|!=|=|<|>|<=|>=|%|&|\?|:|\|\|)'
      captures:
        0: text.sample
    - match: '(\!)'
      captures:
        0: text.sample
    - match: '\b([0-9]+)\b'
      captures:
        0: text.sample
    - match: '(.)'
      captures:
        0: text.sample
  vars:
    - match: '(var_(.*?)(?=\]|\s))'
      captures:
        0: text.sample
    - match: '(mem_(.*?)(?=\]|\s))'
      captures:
        0: text.sample
    - match: '(hog_(.*?)(?=\]|\s))'
      captures:
        0: text.sample
    - match: '(.)'
      captures:
        0: text.sample
  tildeProcessing:
    - match: '(~)'
      captures:
        0: text.sample
      push: 
        - match: '(^(?=.{0,1})(?:|))'
          pop: true
          captures:
            0: text.sample
        - match: '(ifd|if|setif|set|call)'
          captures:
            0: text.sample
        - include: main
        - include: vars
        - include: opsAndLiterals
        - include: randoVariable
        - match: '(.)'
          captures:
            0: text.sample
    - match: '(.)'
      captures:
        0: text.sample
  bracketProcessing:
    - match: '(\[)'
      captures:
        0: text.sample
      push: 
        - match: '(\])'
          pop: true
          captures:
            0: text.sample
        - include: main
        - include: vars
        - include: opsAndLiterals
        - include: randoVariable
        - match: '(and|call|else|end|elseif|if|ifd|or|random|set|setif)'
          captures:
            0: text.sample
        - match: '([^\x{0028}a-zA-Z\x{0029}]\\d+|true|false|none|null|((\\+|-)\\d+))'
          captures:
            0: text.sample
        - match: '(.)'
          captures:
            0: text.sample
    - match: '(.)'
      captures:
        0: text.sample
